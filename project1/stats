#!/bin/sh

separate_rows ()
{
    if [ -z "$1" ]
    then
        echo "ERROR!"
        exit 1
    fi

    # MAKE FILE LIST
    touch $$"FILE_LIST"

    row=1
    while read line
    do
        tmp=$$"row"$row
        touch $tmp
        echo $tmp >> $$"FILE_LIST"

        for i in $line
        do
            echo $i >> $tmp
        done
        row=`expr $row + 1`
    done < $1
}

separate_columns ()
{
    if [ -z "$1" ]
    then
        echo "ERROR!"
    fi

    # MAKE FILE LIST
    FILE_LIST=()

    col=1
    while read line
    do
        tmp=$$"col"$col
        touch $tmp
        echo $tmp >> $$"FILE_LIST"

        counter=1
        for i in $line
        do
            echo $i >> $$"col"$counter
            counter=`expr $counter + 1`
        done
    done < $1
}

sort_files()
{
    while read line
    do
        sort $line -n -o $line
    done < $$"FILE_LIST"
}

# get command line args
# separate into files by row or col !!NEEDS ERROR HANDLING!!
separate_rows "test_file2"
# separate_columns "test_file2"

# sort files !!NEEDS ERROR HANDLING!!
sort_files

# calculate average for each file !!NEEDS ERROR HANDLING!!
# !!ENSURE PROPER ROUNDING!!
averages=()
while read line
do
    sum=0
    counter=0
    while read -r num
    do
        (( sum += num ))
        (( counter += 1 ))
    done < $line
    echo `expr $sum / $counter`
done < $$"FILE_LIST"
# calculate median for each file !!NEEDS ERROR HANDLING!! !!MAKE SURE TO DO
# PROPER ROUNDING!!
medians=()

# clean up files
# rm -f *rows*
# rm -f *col*
# rm -f $$"FILE_LIST"

# HANDLE ERRORS
# PIPE ERROR OUTPUT CORRECTLY
# CORRECT EXIT STATEMENTS

exit 0
